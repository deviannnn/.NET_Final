@model Pharmacy.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Cập nhật sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin">Trang Chủ</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Products")">Sản phẩm</a></li>
                    <li class="breadcrumb-item active">Cập nhật sản phẩm</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<!-- /.container-fluid -->
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        <div class="row">
            <!-- Left content -->
            <div class="col-md-8">
                <div class="card card-warning" id="main-card">
                    <div class="card-header">
                        <h3 class="card-title">Thông tin sản phẩm</h3>
                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <div class="form-group">
                        <div class="card-body">
                            <div class="form-group">
                                <label for="name">Tên sản phẩm</label>
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tên tối đa 50 kí tự", @maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>

                            <div class="row form-group">
                                <div class="col-5">
                                    <label for="id_category">Danh mục</label>
                                    @Html.DropDownListFor(model => model.id_category, (SelectList)ViewBag.Category, new { @class = "form-control" })
                                </div>
                                <div class="col-7">
                                    <div class="row">
                                        <div class="col-4">
                                            <label for="quantity">Số lượng</label>
                                            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control", @min = "1", @placeholder = "Số lượng" } })
                                            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-4">
                                            <label for="price">Đơn giá</label>
                                            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @min = "1", @placeholder = "VND" } })
                                            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-4">
                                            <div class="form-check">
                                                @{
                                                    bool isSale = Model.isSale ?? false;
                                                }
                                                @Html.CheckBoxFor(model => isSale, new { @class = "form-check-input isSaleCheckbox" })
                                                <label for="isSale">Giảm giá</label>
                                            </div>
                                            <div class="priceSaleWrapper" style="display:none;">
                                                @Html.EditorFor(model => model.priceSale, new { htmlAttributes = new { @class = "form-control", @min = "1", @placeholder = "VND" } })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="description">Mô tả</label>
                                @Html.TextAreaFor(model => model.description, new { @class = "form-control", @rows = 3, @placeholder = "Nội dung mô tả sản phẩm", @maxlength = "500" })
                                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label for="meta">Meta</label>
                                @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                            </div>

                            <div class="row form-group mb-0">
                                <div class="col-3">
                                    <label for="order">Vị trí</label>
                                    @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control", @min = "1", style = "width: 100px" } })
                                    @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-3" style="align-self: end">
                                    <div>
                                        @{
                                            bool hide = Model.hide ?? false;
                                        }
                                        @Html.CheckBoxFor(model => hide, new { @class = "form-check-input" })
                                        <label class="form-check-label" for="hide">Hiển thị</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
            </div>
            <!-- Right content -->
            <div class="col-md-4">
                <div class="card card-cyan" id="sub-card">
                    <div class="card-header">
                        <h3 class="card-title">Ảnh đại diện</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <img id="img-preview" src="~/wwwroot/upload/img/product/@Model.img" width="80%" />
                        <div class="form-group">
                            <label for="img"></label>
                            <div class="input-group">
                                <div class="custom-file">
                                    <input type="file" name="img" id="img" accept=".jpg,.png,.gif,.jpeg,.bmp" onchange="previewImage();" />
                                    <label class="custom-file-label" for="img">Chọn file</label>
                                </div>
                                <div class="input-group-append">
                                    <span class="input-group-text">Tải lên</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->

        <div class="content-header">
            <button type="submit" class="btn btn-warning">Lưu</button>
            <a href="@Url.Action("Index", "Products")">
                <button type="button" class="btn btn-outline-secondary">Quay về</button>
            </a>
        </div>
    }
</section>
<!-- /.content -->

@section Scripts {
    <script>
        $(document).ready(function () {
            updateHeight();

            $("#img").change(function () {
                readURL(this);
            });

            $('input, textarea').focus(function () {
                $(this).next('.text-danger').hide();
                if (this.id === 'name') {
                    $('#meta').next('.text-danger').hide();
                }
                updateHeight();
            });

            if ($('.isSaleCheckbox').is(':checked')) {
                $('.priceSaleWrapper').show();
            } else {
                $('.priceSaleWrapper').hide();
            }

            $('.isSaleCheckbox').change(function () {
                if ($(this).is(':checked')) {
                    $('.priceSaleWrapper').show();
                } else {
                    $('.priceSaleWrapper').hide();
                }
            });
        });

        function updateHeight() {
            var mainHeight = $('#main-card').height();
            var subHeight = $('#sub-card').height();
            var imgHeight = $('#img-preview').height();
            $('#img-preview').height(imgHeight - subHeight + mainHeight);
        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#img-preview').attr('src', e.target.result);
                    $('#img-preview').show();
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i").replace(/,/g, "");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>
}